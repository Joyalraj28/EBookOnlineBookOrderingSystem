@using System.Web.Mvc;
@using AdminDashboard.Models.Table;

@model AdminDashboard.Models.ViewModel.BookViewModel

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm("Create", "Book", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="form-horizontal">
        <h4>Create Book</h4>
        <hr />

        <div id="Form-Body">

            <div id="cloumn">
                <div id="Form-prop">
                    <label>Book Image</label>

                    @if (ViewBag.ImagePath != null)
                    {
                        <img id="imagePreview" src="@Url.Content(ViewBag.ImagePath)" alt="Uploaded Image" style="max-width: 200px; max-height: 200px;" />
                    }

                    else
                    {
                        <img id="imagePreview" src="#" alt="Preview" style="display:none; max-width:200px; max-height:200px;" />
                    }

                    @Html.TextBoxFor(m => m.ImageFile, new { type = "file", id = "imageUpload", name = "imageUpload", onchange = "previewImage(this)" })



                </div>


                <div id="Form-prop">
                    <label>Book name</label>
                    @Html.TextBoxFor(model => model.Book.name)
                </div>

                <div id="Form-prop">
                    <label>Book price</label>
                    @Html.TextBoxFor(model => model.Book.price, htmlAttributes: new { type = "number", min = 0 })
                </div>

            </div>

            <div id="cloumn">

                <div id="Form-prop">
                    <label>Book catergory</label>
                    @Html.DropDownListFor(model => model.SelectCatergories, Model.Catergories, htmlAttributes: new { @class = "form-control" })
                </div>

                <div id="Form-prop">
                    <label>Book Authors</label>
                    @Html.DropDownListFor(model => model.SelectAuthors, Model.Authors, htmlAttributes: new { @class = "form-control" })
                </div>

                <div id="Form-prop">
                    <label>Book quantity</label>
                    @Html.TextBoxFor(model => model.Book.quantity, htmlAttributes: new { type = "number", min = 0 })
                </div>

                <div id="Form-prop">
                    <label>Book description</label>
                    @Html.TextAreaFor(model => model.Book.description)
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="Save-btn" type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <div id="Form-prop" style="visibility:collapse">
                <label>Book ID</label>
                @Html.LabelFor(model => model.Book.id, htmlAttributes: new { id = "id" })
                @Html.LabelFor(model => model.Book.authorid, htmlAttributes: new { id = "authorid" })
                @Html.LabelFor(model => model.Book.catergoryid, htmlAttributes: new { id = "catergoryid" })
            </div>

        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function previewImage(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#imagePreview').attr('src', e.target.result);
                $('#imagePreview').css('display', 'block');
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    function CatergoriesChage() {
        //var selectElement = document.getElementById("CatergoriesSelect");
        //var selectedValue = selectElement.options[selectElement.selectedIndex].value;
        //$("#catergoryid").val(selectedValue)

    }

    function AuthorsChage() {
        var selectElement = document.getElementById("AuthorsSelect");
        var selectedValue = selectElement.options[selectElement.selectedIndex].value;
        $("#authorid").val(selectedValue)

    }
</script>