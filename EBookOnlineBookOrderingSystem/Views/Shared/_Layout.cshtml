@using EBookOnlineBookOrderingSystem.Controls
@using EBookOnlineBookOrderingSystem.Models.Table
@using EBookOnlineBookOrderingSystem.Models.Procedure



<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - E Book</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <style>

        .alert-content {
            display: flex;
            justify-content: end;
        }

        .alert {
            padding: 20px;
            background-color: #f44336;
            color: white;
            opacity: 1;
            transition: opacity 0.6s;
            margin: 15px;
            width: 300px;
            z-index: 1;
            position: absolute;
        }

            .alert.success {
                background-color: #04AA6D;
            }

            .alert.info {
                background-color: #2196F3;
            }

            .alert.warning {
                background-color: #ff9800;
            }

        .closebtn {
            margin-left: 15px;
            color: white;
            font-weight: bold;
            float: right;
            font-size: 22px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
        }

            .closebtn:hover {
                color: black;
            }


        .dropbtn {
            background-color: transparent;
            color: white;
            padding: 16px;
            font-size: 16px;
            border: none;
            cursor: pointer;
        }

            .dropbtn:hover, .dropbtn:focus {
                /*background-color: #2980B9;*/
                color: antiquewhite;
            }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f1f1f1;
            min-width: 160px;
            overflow: auto;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            .dropdown-content a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
            }

        .dropdown a:hover {
            background-color: #ddd;
        }

        .show {
            display: block;
        }

        #AddCartItem {
            display: flex;
        }

        #bookname {
            width: 150px;
        }

        #trash {
            border-color: transparent;
            display: flex;
            flex-direction: column;
            color: indianred;
            justify-content: center;
        }
    </style>


    <script>
        function toggleCheckboxes(masterCheckbox) {
            // Get all checkboxes with the class 'row-checkbox'
            const checkboxes = document.querySelectorAll('#isActive');
            // Set the checked status of each checkbox to match the master checkbox
            checkboxes.forEach(checkbox => checkbox.checked = masterCheckbox.checked);
        }

        function updateMasterCheckbox() {
            const masterCheckbox = document.getElementById('isActiveAll');
            const checkboxes = document.querySelectorAll('#isActive');
            // Update the master checkbox based on the status of all row checkboxes
            masterCheckbox.checked = Array.from(checkboxes).every(checkbox => checkbox.checked);
        }
    </script>

</head>
<body>


    @if (ViewConfig.IsShowNavigationBar)
    {
        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    @Html.ActionLink("E-Book", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })

                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li>@Html.ActionLink("Home", "Index", "Home")</li>
                        <li>@Html.ActionLink("About", "About", "Home")</li>
                        <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                    </ul>

                    <div class="Login">
                        <div class="Login-btn">
                            @{

                                if (SessionControls<Users>.GetValue("LoginUser") is Users LoginUser && !string.IsNullOrEmpty(LoginUser?.username))
                                {
                                    <div class="dropdown">
                                        <button onclick="LoginInfoDropdown()" class="dropbtn"><i class='fas fa-user-circle'></i> @LoginUser.username</button>
                                        <div id="LoginDropdown" class="dropdown-content">
                                            <a>@LoginUser.email</a>
                                            @Html.ActionLink("Sign out", "Signout", "Home")
                                        </div>
                                    </div>

                                    if (SessionControls<List<Spr_GetAddCardInfoByUser>>.GetValue("AddToCardInfo") is List<Spr_GetAddCardInfoByUser> addtocardlist && addtocardlist.Count > 0)
                                    {
                                        <div class="dropdown">
                                            <button onclick="AddToCardInfoDropdown()" class="dropbtn"><i class='fas fa-shopping-cart'></i> (@addtocardlist.Count)</button>
                                            <div id="AddToCardDropdown" class="dropdown-content">
                                                @foreach (var cardinfo in addtocardlist.Take(5))
                                                {
                                                    <div id="AddCartItem">
                                                        <a id="bookname" href="@Url.Action("ViewBook","Home",new { id = cardinfo.id })">@cardinfo.name</a>
                                                        <a>(@cardinfo.addcartQTY)</a>
                                                        <button onclick="DeleteConformation(@cardinfo.adcardid)" id="trash"><i class='fa fa-trash'></i></button>

                                                    </div>
                                                }
                                                <div id="AddCartItem">
                                                    @Html.ActionLink("View More", "ViewMoreAllAddtoCart","Home")
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <button class="dropbtn"><i class='fas fa-shopping-cart'></i> (0)</button>
                                    }

                                    if (SessionControls<bool>.GetValue("IsOrder") is bool orders && orders)
                                    {
                                    <div class="dropdown" style="display:flex;justify-content:center;">
                                        <a href="@Url.Action("OrderList","Home")" class="dropbtn"><i class="fas fa-shipping-fast"></i></a>
                                    </div>
                                   }

                                }
                                else
                                {

                                    @Html.ActionLink("Login", "Index", "Login")
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

   
  @* Alert box *@ 
<div class="alert-content">

    @if (TempData["DangerAlert"] != null)
    {
        <div class="alert">
            <span class="closebtn">&times;</span>
            <strong>Error!</strong> @TempData["DangerAlert"]
        </div>
    }

    @if (TempData["SuccessAlert"] != null)
    {
        <div class="alert success">
            <span class="closebtn">&times;</span>
            <strong>Success!</strong> @TempData["SuccessAlert"]
        </div>
    }
    @if (TempData["InfoAlert"] != null)
    {
        <div class="alert info">
            <span class="closebtn">&times;</span>
            <strong>Info!</strong> @TempData["InfoAlert"]
        </div>
    }
    </div>

    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - E-Book Online Book ordering Plateform </p>
        </footer>
    </div>



    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script>

        function DeleteConformation(id)
        {

            if (confirm("Do you whant to delete this book ?"))
            {
                PostAction("@Url.Action("DeleteAddCartBook", "Home")", { 'id': id })
            }


        }

        function PostAction(url, data) {
            $.ajax({
                    type: 'POST',
                    url:url,
                    data: data,
                    error: function (e) {
                        alert(r.responseText);
                    },
                    complete: function (r) {
                        location.reload();
                    }
                });
        }

        /* When the user clicks on the button,
        toggle between hiding and showing the dropdown content */
        function LoginInfoDropdown() {
            document.getElementById("LoginDropdown").classList.toggle("show");
        }

        function AddToCardInfoDropdown() {
            document.getElementById("AddToCardDropdown").classList.toggle("show");
        }

        // Close the dropdown if the user clicks outside of it
        window.onclick = function (event) {
            if (!event.target.matches('.dropbtn')) {
                var dropdowns = document.getElementsByClassName("dropdown-content");
                var i;
                for (i = 0; i < dropdowns.length; i++) {
                    var openDropdown = dropdowns[i];
                    if (openDropdown.classList.contains('show')) {
                        openDropdown.classList.remove('show');
                    }
                }
            }
        }
    </script>

    <script>
        //$("document").ready(function () {
        //    $("#Search-Input").on("keyup", function () {
        //        var value = $(this).val().toLowerCase();

        //        $("#search-tag").html().filter(function () {
        //            $(this).toggle($(this).text().tolowercase().indexof(value) > -1)
        //        });
        //    });
        //});

        //$("#isActiveAll").change(function (e) {

        //    // Check or uncheck all other checkboxes based on the master checkbox state
        //    $('#isActive').prop('checked', $(this).prop('checked'));
            
        //});

 

    </script>


    <script>
        var close = document.getElementsByClassName("closebtn");
        var i;

        for (i = 0; i < close.length; i++) {
            close[i].onclick = function () {
                var div = this.parentElement;
                div.style.opacity = "0";
                setTimeout(function () { div.style.display = "none"; }, 600);
            }
        }
    </script>

</body>
</html>
